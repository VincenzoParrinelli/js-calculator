{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","prevResult","setPrev","ops","clearEntry","reset","deleteNum","slice","updateState","operator","includes","nums","numsArr","i","push","onClick","toString","reverse","calculate","eval","className","placeholder","classname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"g5BAGe,SAASA,MAEtB,cAA4BC,oDAAS,IAArC,iKAAOC,OAAP,cAAeC,UAAf,cACA,WAA8BF,oDAAS,KAAvC,kKAAOG,WAAP,cAAmBC,QAAnB,cAEMC,IAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAG3BC,WAAa,WACjBJ,UAAU,KAGNK,MAAQ,WACZH,QAAQ,KACRF,UAAU,KAGNM,UAAY,WACD,KAAXP,QAGJC,UAAUD,OAAOQ,MAAM,GAAI,KAGvBC,YAAc,SAACC,GAEjBN,IAAIO,SAASD,IAAwB,KAAXV,QAC1BI,IAAIO,SAASD,IAAaN,IAAIO,SAASX,OAAOQ,OAAO,KAGvDP,UAAUD,OAASU,IAIfE,KAAO,WAGX,IAFA,IAAMC,EAAU,GADC,WAGRC,GACPD,EAAQE,KACN,qEAAgBC,QAAS,kBAAMP,YAAYK,EAAEG,aAA7C,SAA2DH,GAA9CA,KAFRA,EAAI,EAAGA,EAAI,GAAIA,IAAM,EAArBA,GAMT,OAAOD,EAAQK,WAGXC,UAAY,SAAZA,YACJ,IACEhB,QAAQH,OAAS,KACjBC,UAAUmB,KAAKpB,QAAQiB,YACvB,eACAhB,UAAU,MAId,OACE,kEAAKoB,UAAU,MAAf,SACE,mEAAKA,UAAU,aAAf,UACE,mEAAKA,UAAU,UAAf,UACE,kEAAKA,UAAU,eAAeC,YAAY,IAA1C,SAA+CpB,aAC/C,kEAAKmB,UAAU,kBAAf,SAAkCrB,QAAU,SAI9C,mEAAKqB,UAAU,YAAf,UACE,qEAAQL,QAAS,kBAAMX,cAAvB,gBACA,qEAAQW,QAAS,kBAAMV,SAAvB,eACA,qEAAQU,QAAST,UAAjB,iBACA,qEAAQS,QAAS,kBAAMP,YAAY,MAAnC,eACA,qEAAQO,QAAS,kBAAMP,YAAY,MAAnC,eACA,qEAAQO,QAAS,kBAAMP,YAAY,MAAnC,eACA,qEAAQO,QAAS,kBAAMP,YAAY,MAAnC,kBAIF,mEAAKY,UAAU,OAAf,UACGT,OACD,qEAAQI,QAAS,kBAAMP,YAAY,MAAnC,eACA,qEAAQO,QAAS,kBAAMP,YAAY,MAAnC,eACA,qEAAQc,UAAU,QAAQP,QAASG,UAAnC,yB,gICtEKK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACrC,EAAA,EAAD,MAEFsC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9656ed38.chunk.js","sourcesContent":["import './App.scss';\nimport React, { useState } from \"react\"\n\nexport default function App() {\n\n  const [result, setResult] = useState(\"\")\n  const [prevResult, setPrev] = useState(\"0\")\n\n  const ops = [\"/\", \"*\", \"-\", \"+\", \".\"]\n\n\n  const clearEntry = () => {\n    setResult(\"\")\n  }\n\n  const reset = () => {\n    setPrev(\"0\")\n    setResult(\"\")\n  }\n\n  const deleteNum = () => {\n    if (result === \"\") return\n\n\n    setResult(result.slice(0, -1))\n  }\n\n  const updateState = (operator) => {\n    if (\n      ops.includes(operator) && result === \"\" ||\n      ops.includes(operator) && ops.includes(result.slice(-1))\n    ) { return }\n\n    setResult(result + operator)\n   \n  }\n\n  const nums = () => {\n    const numsArr = []\n\n    for (let i = 1; i < 10; i++) {\n      numsArr.push(\n        <button key={i} onClick={() => updateState(i.toString())}>{i}</button>\n      )\n    }\n\n    return numsArr.reverse()\n  }\n\n  const calculate = () => {\n    try {\n      setPrev(result + \"=\")\n      setResult(eval(result).toString())\n    } catch {\n      setResult(\"\")\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"calculator\">\n        <div className=\"display\">\n          <div className=\"display-prev\" placeholder=\"0\">{prevResult}</div>\n          <div className=\"display-current\">{result || \"0\"}</div>\n        </div>\n\n\n        <div className=\"operators\">\n          <button onClick={() => clearEntry()}>CE</button>\n          <button onClick={() => reset()}>C</button>\n          <button onClick={deleteNum}>DEL</button>\n          <button onClick={() => updateState(\"/\")}>/</button>\n          <button onClick={() => updateState(\"*\")}>*</button>\n          <button onClick={() => updateState(\"-\")}>-</button>\n          <button onClick={() => updateState(\"+\")}>+</button>\n\n        </div>\n\n        <div className=\"nums\">\n          {nums()}\n          <button onClick={() => updateState(\"0\")}>0</button>\n          <button onClick={() => updateState(\".\")}>.</button>\n          <button classname=\"equal\" onClick={calculate}>=</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}